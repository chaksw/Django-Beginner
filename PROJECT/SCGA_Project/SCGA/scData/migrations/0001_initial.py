# Generated by Django 4.2.2 on 2023-06-19 08:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Functionality',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('func', models.CharField(max_length=10, verbose_name='Function')),
            ],
        ),
        migrations.CreateModel(
            name='Load',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('load', models.CharField(max_length=50, verbose_name='Load')),
                ('Func', models.ForeignKey(db_column='Functionality', on_delete=django.db.models.deletion.CASCADE, to='scData.functionality')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('project', models.CharField(max_length=50, verbose_name='Project')),
            ],
        ),
        migrations.CreateModel(
            name='TestPlan',
            fields=[
                ('func', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True, verbose_name='Function')),
                ('level', models.CharField(choices=[('C', 'C'), ('A', 'A'), ('B', 'B')], default='A', max_length=2, verbose_name='Level')),
                ('process', models.CharField(max_length=50, verbose_name='Process')),
                ('fName', models.CharField(max_length=50, verbose_name='File Name')),
                ('analyst', models.CharField(max_length=50, verbose_name='Analyst')),
                ('site', models.CharField(choices=[('Kursk', 'BARS-Kursk(All Avionics)'), ('Info-Tech', 'Info-Tech'), ('Tambov', 'BARS-Tambov'), ('Kaluga', 'BARS-Kaluga(EDS)'), ('Hyderabad', 'Hyderabad(EDS)'), ('Taganrog', 'BARS-Taganrog(EDS)'), ('Madurai', 'Madurai(EDS)'), ('Puetro Rico', 'Puetro Rico'), ('Shanghai', 'Shanghai(EDS)'), ('Moscow', 'BARS-Moscow(All Avionics)'), ('Bangalire', 'Bangalire(EDS)'), ('Beijing', 'Beijing(EDS)')], max_length=100, verbose_name='Site')),
                ('startDate', models.DateTimeField(verbose_name='Start Date')),
                ('mcdcCoverage', models.DecimalField(decimal_places=4, max_digits=4, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='MC/DC Coverage')),
                ('analysisCoverage', models.DecimalField(decimal_places=4, max_digits=4, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Analysis Coverage')),
                ('totalScCoverage', models.DecimalField(decimal_places=4, max_digits=4, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Total SC Coverage')),
                ('coveredBranches', models.IntegerField(verbose_name='Covered Branches')),
                ('coveredPairs', models.IntegerField(verbose_name='Covered Pairs')),
                ('coveredStatements', models.IntegerField(verbose_name='Covered Statements')),
                ('totalBranches', models.IntegerField(verbose_name='Total Branches')),
                ('totalPairs', models.IntegerField(verbose_name='Total Pairs')),
                ('totalStatements', models.IntegerField(verbose_name='Total Statements')),
                ('overSight', models.CharField(choices=[('Y', 'Yes'), ('N', 'No'), (' ', ' ')], default=' ', max_length=3)),
                ('tech', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tech')),
                ('nonTech', models.CharField(blank=True, max_length=50, null=True, verbose_name='Non-Tech')),
                ('processDefect', models.CharField(blank=True, max_length=50, null=True, verbose_name='Process Defect')),
                ('swLoad', models.ForeignKey(db_column='Load', on_delete=django.db.models.deletion.CASCADE, to='scData.load')),
            ],
        ),
        migrations.CreateModel(
            name='TestException',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('note', models.CharField(max_length=50, verbose_name='Note')),
                ('module', models.CharField(max_length=50, verbose_name='Module')),
                ('function', models.CharField(max_length=50, verbose_name='Function')),
                ('SWline', models.TextField(max_length=500, verbose_name='Uncoverd SW Line')),
                ('InsSWline', models.TextField(max_length=500, verbose_name='Uncoverd Instrumented SW Line')),
                ('reqTag', models.CharField(max_length=500, verbose_name='Requirement Tag')),
                ('analyst', models.CharField(max_length=50, verbose_name='Analyst')),
                ('ucClassification', models.CharField(choices=[('IT', 'Incomplete Test'), ('RCM', 'Requirement-Code Mismatch'), ('DeactCode', 'Deactivated Code'), ('DefenCode', 'Defensive Code'), ('TEL', 'Test Environment Limitation'), ('PAS', 'Previously Analyzed Software'), ('other', 'Other'), (' ', ' ')], default=' ', max_length=100, verbose_name='Class')),
                ('analysisSummary', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Analysis Summary')),
                ('correctiveAction', models.TextField(blank=True, default='No corrective action required.', max_length=300, null=True, verbose_name='Corrective Action')),
                ('issue', models.CharField(choices=[('Y', 'Yes'), ('N', 'No'), (' ', ' ')], default=' ', max_length=10, verbose_name='Issue')),
                ('applicable', models.CharField(choices=[('PAR', 'PAR'), ('CR', 'CR'), ('N/A', 'N/A')], default='N/A', max_length=10, verbose_name='Applicable')),
                ('testPlan', models.ForeignKey(db_column='TestPlan', on_delete=django.db.models.deletion.CASCADE, to='scData.testplan')),
            ],
        ),
        migrations.AddField(
            model_name='functionality',
            name='Project',
            field=models.ForeignKey(db_column='Project', on_delete=django.db.models.deletion.CASCADE, to='scData.project'),
        ),
    ]
